// $ ./porth.py com ./checker.porth
// $ ./checker output.ppm
// $ feh ./output.ppm

include "std.porth"

const WIDTH 512 end
const HEIGHT 512 end
const CELL_WIDTH 64 end
const CELL_HEIGHT 64 end
const sizeof(pixel) 3 end

memory canvas sizeof(pixel) WIDTH * HEIGHT * end

proc main in
  argc 2 < if
    "Usage: ./checker <output.ppm>\n" eputs
    "[ERROR] no output file path is provided\n" eputs
    1 exit
  end

  0 while dup HEIGHT < do
    0 while dup WIDTH < do
      peek row col in
        row CELL_HEIGHT /
        col CELL_WIDTH  /
        +
        2 %
        0 = if
          row WIDTH * col + sizeof(pixel) * canvas +ptr
          dup 255 swap !8 1 ptr+
          dup 0   swap !8 1 ptr+
          dup 255 swap !8 drop
        else
          row WIDTH * col + sizeof(pixel) * canvas +ptr
          dup 0   swap !8 1 ptr+
          dup 0   swap !8 1 ptr+
          dup 0   swap !8 drop
        end
      end
      1 +
    end drop
    1 +
  end drop

  1 nth_argv
  let file_path_cstr in
    "[INFO] Generating "       puts
    file_path_cstr cstr-to-str puts
    "\n"                       puts

    420
    O_CREAT O_WRONLY or
    file_path_cstr
    AT_FDCWD
    openat

    let fd in
      fd 0 < if
        "[ERROR] could not open file `" eputs
        file_path_cstr cstr-to-str      eputs
        "`\n"                           eputs
        1 exit
      end

      "P6\n"                                fd fputs
      WIDTH                                 fd fputu
      " "                                   fd fputs
      HEIGHT                                fd fputu
      " 255\n"                              fd fputs
      WIDTH HEIGHT * sizeof(pixel) * canvas fd fputs

      fd close drop
    end
  end
end
